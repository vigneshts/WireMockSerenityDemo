{"name":"Get weather using city ID from actual server. This is a failing scenario","id":"get-weather-from-the-actual-service:Get weather using city ID from actual server. This is a failing scenario","testSteps":[{"number":1,"description":"Given The user requests a GET request for the City ID \"581w5135\"","duration":156,"startTime":1518326106868,"exception":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nJSON path $ doesn\u0027t match.\nExpected: map containing [\"weather\"-\u003eANYTHING]\n  Actual: {cod\u003d400, message\u003d581w5135 is not a city ID}\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":636},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"content","fileName":"ResponseSpecificationImpl.groovy","lineNumber":265},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":248},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"body","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":268},{"declaringClass":"com.wiremockserenity.cucumber.serenity.GetWeatherFromActualSteps","methodName":"validateResponseOfCityID","fileName":"GetWeatherFromActualSteps.java","lineNumber":41},{"declaringClass":"com.wiremockserenity.cucumber.steps.GetWeatherFromActualApi","methodName":"getWeatherUsingCityID","fileName":"GetWeatherFromActualApi.java","lineNumber":23},{"declaringClass":"✽","methodName":"Given The user requests a GET request for the City ID \"581w5135\"","fileName":"GetWeatherFromActualApi.feature","lineNumber":20}]},"result":"FAILURE","precondition":false,"children":[{"number":2,"description":"GET http://api.openweathermap.org/data/2.5/weather?id\u003d581w5135\u0026appid\u003dbd769598054f76176a6881a11fc85bc1","duration":0,"startTime":1518326106990,"result":"SUCCESS","restQuery":{"method":"GET","path":"http://api.openweathermap.org/data/2.5/weather?id\u003d581w5135\u0026appid\u003dbd769598054f76176a6881a11fc85bc1","content":"","contentType":"null","requestHeaders":"Accept\u003d*/*","requestCookies":"","responseHeaders":"Server: openresty\nDate: Sun, 11 Feb 2018 05:15:07 GMT\nContent-Type: application/json; charset\u003dutf-8\nContent-Length: 51\nConnection: keep-alive\nX-Cache-Key: /data/2.5/weather?id\u003d581w5135\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Methods: GET, POST","responseCookies":"","responseBody":"{\n    \"cod\": \"400\",\n    \"message\": \"581w5135 is not a city ID\"\n}","statusCode":400},"precondition":false}]},{"number":3,"description":"Then The weather is returned with Status code 200","duration":1,"startTime":1518326107024,"result":"SKIPPED","precondition":false}],"userStory":{"id":"get-weather-from-the-actual-service","storyName":"Get Weather from the actual service","path":"GetWeatherFromActualApi.feature","type":"feature"},"featureTag":{"name":"Get Weather from the actual service","type":"feature"},"title":"Get weather using city ID from actual server. This is a failing scenario","description":"","tags":[{"name":"Get Weather from the actual service","type":"feature"}],"startTime":1518326106868,"duration":158,"testFailureCause":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nJSON path $ doesn\u0027t match.\nExpected: map containing [\"weather\"-\u003eANYTHING]\n  Actual: {cod\u003d400, message\u003d581w5135 is not a city ID}\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":636},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"content","fileName":"ResponseSpecificationImpl.groovy","lineNumber":265},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":248},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"body","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":268},{"declaringClass":"com.wiremockserenity.cucumber.serenity.GetWeatherFromActualSteps","methodName":"validateResponseOfCityID","fileName":"GetWeatherFromActualSteps.java","lineNumber":41},{"declaringClass":"com.wiremockserenity.cucumber.steps.GetWeatherFromActualApi","methodName":"getWeatherUsingCityID","fileName":"GetWeatherFromActualApi.java","lineNumber":23},{"declaringClass":"✽","methodName":"Given The user requests a GET request for the City ID \"581w5135\"","fileName":"GetWeatherFromActualApi.feature","lineNumber":20}]},"testFailureClassname":"java.lang.AssertionError","testFailureMessage":"1 expectation failed.\nJSON path $ doesn\u0027t match.\nExpected: map containing [\"weather\"-\u003eANYTHING]\n  Actual: {cod\u003d400, message\u003d581w5135 is not a city ID}\n","testFailureSummary":"FAILURE;java.lang.AssertionError;1 expectation failed.\nJSON path $ doesn\u0027t match.\nExpected: map containing [\"weather\"-\u003eANYTHING]\n  Actual: {cod\u003d400, message\u003d581w5135 is not a city ID}\n;ResponseSpecificationImpl.groovy","projectKey":"","annotatedResult":"FAILURE","dataTable":{"headers":["cityID"],"rows":[{"values":["581w5135"],"result":"FAILURE"}],"predefinedRows":true,"dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":"","description":""}]},"manual":false,"result":"FAILURE"}